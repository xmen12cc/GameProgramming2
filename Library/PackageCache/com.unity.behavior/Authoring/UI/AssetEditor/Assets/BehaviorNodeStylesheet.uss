#NodeTitle Label {
    color: var(--appui-color-white);
    -unity-text-align: middle-center;
    -unity-font-definition: url('/Packages/com.unity.dt.app-ui/PackageResources/Fonts/Inter-SemiBold.ttf');
}

#Content {
    border-radius: var(--appui-border-radius-md);
}

#Content LinkField {
    align-self: center;
}

#Content Label {
    margin-top: 0;
    margin-bottom: 0;
    margin: 0 2px;
    padding: 0;
    align-self: center;
}

#NodeTitle {
    border-radius: var(--appui-border-radius-lg);
    align-self: stretch;
    align-items: center;
    justify-content: center;
    padding-left: 8px;
    padding-right: 8px;
}

.TwoLineNode #NodeTitle {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    padding: 0;
    justify-content: center;
    align-items: center;
    align-self: stretch;
    height: 20px;
}

#NodeTitleLabel {
    margin: 0;
    align-self: center;
}

#NodeValueContainer {
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    display: none;
}

.Action #NodeValueContainer  {
    display: flex;
}

#NodeValueContainer > Label {
    -unity-text-align: middle-center;
}

.TwoLineNode #NodeValueContainer {
    height: 36px;
    padding: 8px;
    justify-content: center;
    align-items: center;
    align-self: stretch;
    display: flex;
}

#NodeTitle LinkField Label {
    align-self: center;
}

/* Action node styles */

.Action #NodeContentContainer {
    height: 36px;
    padding: 8px;
}

.Action #NodeTitle  {
    display: none;
}

StartOnEventUI #NodeTitle  {
    padding: 0px;
}

ActionNodeUI #NodeValueContainer  {
    display: none;
}

SetValueNodeUI #Content {
    flex-direction: row;
}

/* Start node styles */

.Start #Content {
    min-width: 160px;
    flex-direction: column;
}

.Start #NodeTitle {
    background-color: var(--appui-color-green-800);
}

.Start #NodeTitle > #NodeTitleLabel {
    color: var(--appui-color-white);
    font-size: var(--appui-font-sizes-100);
    -unity-font-definition: url('/Packages/com.unity.dt.app-ui/PackageResources/Fonts/Inter-SemiBold.ttf');
    align-self: center;
    -unity-text-align: middle-center;
}

.Start #NodeValueContainer {
    flex-direction: row;
    flex-shrink: 0;
    height: 31px;
}

.Start #StartToggle {
    flex-direction: row-reverse;
    justify-content: space-between;
    flex-grow: 1;
}

/* Flow category node styles */

.Modifier #Content, .Composite #Content {
    min-width: 160px;
    flex-direction: column;
    height: 100%;
}

.Modifier #NodeTitle, .Composite #NodeTitle  {
    background-color: var(--appui-color-purple-800);
    display: flex;
    padding: 2px 10px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-self: stretch;
    height: 100%;
}

.TwoLineNode #NodeTitle {
    height: 20px;
}

/* Condition node styles */

.Condition #NodeTitle {
    background-color: var(--appui-color-orange-800);
}

.Condition #NodeColor {
    background-color: var(--appui-color-orange-800);
}

ConditionElement {
    justify-content: center;
    align-items: center;
    align-self: stretch;
}

NodeConditionElement {
    align-self: flex-start;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.SwitchNodeUI #NodeTitle {
    background-color: var(--appui-color-orange-800);
}

.SwitchNodeUI #Content {
    min-width: 111px;
    flex-direction: column;
}

.SwitchNodeUI BehaviorLinkField {
    flex-grow: 1;
    margin: 0;
}

/* Event node styles */

EventActionNodeUI #NodeColor {
    background-color: var(--appui-color-green-800);
}

/* Subgraph node styles */

SubgraphNodeUI #NodeColor {
    background-color: var(--appui-color-purple-800);
}


/* Custom port styling for composites */

.Composite .OutputPort:hover #Port-Icon {
    height: 16px;
    width: 28px;
    position: relative;
    left: 0;
    top: 17px;
    align-self: center;
    background-image: url("/Packages/com.unity.behavior/Elements/Assets/Icons/port-multiple-arrow-down.png");
}

JoinNodeUI .InputPort:hover #Port-Icon  {
    height: 16px;
    width: 28px;
    position: relative;
    left: 0;
    top: -17px;
    align-self: center;
    background-image: url("/Packages/com.unity.behavior/Elements/Assets/Icons/port-multiple-arrow-up.png");
}

/* Debugging mode node styles */

.NodeStatus_Uninitialized #Content {

}

#DebugIconContainer {
    width: 32px;
    height: 32px;
    position: absolute;
    right: -10px;
    top: -6px;
    align-items: center;
    justify-content: center;
    display: none;
}

#DebugIcon {
    width: 100%;
    height: 100%;
}

.NodeStatus_Waiting #DebugIconContainer {
    display: flex;
}

.NodeStatus_Success #DebugIconContainer {
    display: flex;
}

.NodeStatus_Running #DebugIconContainer {
    display: flex;
}

.NodeStatus_Failure #DebugIconContainer {
    display: flex;
}

.NodeStatus_Waiting #DebugIcon {
    background-image: url('/Packages/com.unity.behavior/Tools/Graph/Assets/Icons/NodeWaiting.png');
}

.NodeStatus_Success #DebugIcon {
    background-image: url('/Packages/com.unity.behavior/Tools/Graph/Assets/Icons/NodeSuccess.png');
}

.NodeStatus_Running #DebugIcon {
    background-image: url('/Packages/com.unity.behavior/Tools/Graph/Assets/Icons/NodeRunning.png');
}

.NodeStatus_Failure #DebugIcon {
    background-image: url('/Packages/com.unity.behavior/Tools/Graph/Assets/Icons/NodeFailed.png');
}

.Behavior-Reflection {
    align-content: center;
    flex-direction: row;
    -unity-text-align: middle-center;
}

.Behavior-Reflection > Label {
    padding: 0;
    margin: 0 2px;
    align-self: center;
}

.appui-toggle__label {
    margin-left: 0px;
}

.PlaceholderNodeContent {
    flex-direction: row;
    -unity-text-align: middle-center;
    align-content: center;
    flex-grow: 1;
}

.PlaceholderStoryContainer {
    flex-direction: row;
    -unity-text-align: middle-center;
    align-content: center;
    flex-grow: 1;
    margin-right: 4px;
}

.PlaceholderStoryContainer > Label {
    padding: 0px;
    color: var(--appui-color-dark-gray-900);
}

.Placeholder #NodeContentContainer 
{
    background-color: var(--appui-backgrounds-100);
}

.PlaceholderStoryContainer .LinkedLabel {
    color: var(--appui-color-dark-gray-1100);
    margin-right: 2px;
    flex-shrink: 0;
}

.PlaceholderNodeContent .appui-button {
    align-self: flex-end;
}
